trigger: none
pr: none

resources:
  repositories:
    - repository: PowerShell
      type: # git, github, githubenterprise, or bitbucket
      endpoint: # enter the service endpoint connecting to your repository
      name: jchulsey/PowerShell # change this to reflect your repository 

parameters:
  - name: ServerGroup
    type: string
    default: UAT
    values:
      - UAT
      - Production
  - name: Location
    type: string
    default: dc01
    values:
      - dc01
      - dc02
  - name: Action
    type: string
    default: Online
    values:
      - Online
      - Drain
stages:
  - stage: ActionNodes
    jobs:
      - deployment: ActionNodes
        pool: # enter your custom agent
        variables: 
          - ${{ if eq(parameters.ServerGroup, 'UAT') }}:
            - template: 'variables-uat.yaml'
          - ${{ if eq(parameters.ServerGroup, 'Production') }}:
            - templates: 'variables-prod.yaml'
          - ${{ if eq(parameters.Location, 'dc01') }}:
            - name: serverNumbers
              value: $(dc01ServerNumbers)
          - ${{ if eq(parameters.Location, 'dc02') }}:
            - name: servernumbers
              value: $(dc02ServerNumbers)
        ${{ if in(parameters.ServerGroup, 'UAT', 'Production') }}:
          environment: # create an env for UAT and Production using this naming convention: <env name> - ${{ parameters.ServerGroup }}
        ${{ else }}:
          error: true
        strategy:
          runOnce:
            deploy: 
              steps: 
                - checkout: PowerShell
                - pwsh: Write-Host "Pipeline.Workspace = $(Pipeline.Workspace)"

                - task: AzureKeyVault@2
                  retryCountOnTaskFailure: 3 
                  inputs: 
                    ${{ if eq(parameters.ServerGroup, 'UAT') }}:
                      azureSubscription: # enter the name of your UAT Azure subscription
                      KeyVaultName: # enter the name of your UAT key vault where svc account creds are stored
                    ${{ if eq(parameters.ServerGroup, 'Production') }}:
                      azureSubscription: # enter the name of your Production Azure subscription
                      KeyVaultName: # enter the name of your Production key vault where svc account creds are stored
                  RunAsPreJob: false
                  SecretsFilter: > 
                    # enter svc account username alias,
                    # enter svc account password alias
                
                - task: PowerShell@2
                  inputs: 
                    targetType: filePath
                    filePath: ./Maintenance/reboot.ps1
                    arguments: -username "$(# enter svc account username alias)" -password "$(# enter svc account password alias)" -nginxInstanceName "$(nginxInstanceName)" 
                               -serverNumbers "$(servernumbers)"  -nginxApiVersion "$(nginxApiVersion)" -nginxInstancePort "$(nginxInstancePort)"
                               -actionType "${{ parameters.Action }}"
                    pwsh: true 
                    workingDirectory: $(Pipeline.Workspace)/s
        